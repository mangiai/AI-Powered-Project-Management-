"""Added new column

Revision ID: e37290a68450
Revises: 927ae1ae57e2
Create Date: 2024-03-02 18:09:58.192045

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e37290a68450'
down_revision: Union[str, None] = '927ae1ae57e2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('is_onshore', sa.Boolean()))
    op.alter_column('lifecycle', 'type', nullable=True, new_column_name='phase')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('jira_project_data',
    sa.Column('summary', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('duedate', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('statuscategorychangedate', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('subtasks', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('customfield_10015', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Rank', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('updated', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('Start date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('issue_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('resolutiondate', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('workratio', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('[CHART] Time in Status', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('customfield_10019', sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.create_table('portfolios',
    sa.Column('id', sa.BIGINT(), server_default=sa.text("nextval('portfolios_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('StartDate', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('EndDate', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('portfolio_lifecycle_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['portfolio_lifecycle_id'], ['lifecycle.id'], name='portfolios_portfolio_lifecycle_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='portfolios_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('lifecycle',
    sa.Column('id', sa.BIGINT(), server_default=sa.text("nextval('lifecycle_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('type', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='lifecycle_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('kpis',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='kpis_pkey')
    )
    op.create_table('tasks',
    sa.Column('id', sa.BIGINT(), server_default=sa.text("nextval('tasks_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('is_completed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('priority', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('progress', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('StartDate', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('EndDate', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('cost', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('task_assignee_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('task_lifecycle_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('project_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='tasks_project_id_fkey'),
    sa.ForeignKeyConstraint(['task_assignee_id'], ['users.id'], name='tasks_task_assignee_id_fkey'),
    sa.ForeignKeyConstraint(['task_lifecycle_id'], ['lifecycle.id'], name='tasks_task_lifecycle_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='tasks_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('projects',
    sa.Column('id', sa.BIGINT(), server_default=sa.text("nextval('projects_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('is_completed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('StartDate', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('EndDate', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('project_lifecycle_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('program_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('proj_roadmap_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['program_id'], ['programs.id'], name='projects_program_id_fkey'),
    sa.ForeignKeyConstraint(['proj_roadmap_id'], ['roadmaps.id'], name='projects_proj_roadmap_id_fkey'),
    sa.ForeignKeyConstraint(['project_lifecycle_id'], ['lifecycle.id'], name='projects_project_lifecycle_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='projects_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('stewardship',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('asset_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('asset_type', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('asset_stage', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('calculation_method', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('calculation_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('sor', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('dashboard_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('business_steward_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('it_custodian_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('portfolio_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.id'], name='stewardship_portfolio_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='stewardship_pkey')
    )
    op.create_table('roadmaps',
    sa.Column('id', sa.BIGINT(), server_default=sa.text("nextval('roadmaps_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='roadmaps_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('issues',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('type', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('mitigation', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('assigned_to', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('is_completed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('DueDate', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('issues_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('proj_issue_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('prog_issue_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('port_issue_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['issues_id'], ['tasks.id'], name='issues_issues_id_fkey'),
    sa.ForeignKeyConstraint(['port_issue_id'], ['portfolios.id'], name='issues_port_issue_id_fkey'),
    sa.ForeignKeyConstraint(['prog_issue_id'], ['programs.id'], name='issues_prog_issue_id_fkey'),
    sa.ForeignKeyConstraint(['proj_issue_id'], ['projects.id'], name='issues_proj_issue_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='issues_pkey')
    )
    op.create_table('programs',
    sa.Column('id', sa.BIGINT(), server_default=sa.text("nextval('programs_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('StartDate', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('EndDate', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('program_lifecycle_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('portfolio_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('prog_roadmap_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.id'], name='programs_portfolio_id_fkey'),
    sa.ForeignKeyConstraint(['prog_roadmap_id'], ['roadmaps.id'], name='programs_prog_roadmap_id_fkey'),
    sa.ForeignKeyConstraint(['program_lifecycle_id'], ['lifecycle.id'], name='programs_program_lifecycle_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='programs_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('stg_data',
    sa.Column('category1', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('category2', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('category3', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('category4', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('category5', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('assignee', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('priority', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('planned_task_duration', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('actual_task_duration', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sprint', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('progress', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('scheduled_start_date', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('scheduled_end_date', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('actual_task_start_date', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('actual_task_end_date', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('sprint_start_date', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('sprint_end_date', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('predicted_sprint_end_date', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('epic_finish_date', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('cost', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True)
    )
    op.create_table('risks',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('type', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('mitigation', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('assigned_to', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('is_completed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('DueDate', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('risk_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('risk_proj_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('risk_prog_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('risk_port_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['risk_port_id'], ['portfolios.id'], name='risks_risk_port_id_fkey'),
    sa.ForeignKeyConstraint(['risk_prog_id'], ['programs.id'], name='risks_risk_prog_id_fkey'),
    sa.ForeignKeyConstraint(['risk_proj_id'], ['projects.id'], name='risks_risk_proj_id_fkey'),
    sa.ForeignKeyConstraint(['risk_id'], ['tasks.id'], name='risks_risk_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='risks_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('is_system_admin', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_fte', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_business_steward', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_resource', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    # ### end Alembic commands ###
